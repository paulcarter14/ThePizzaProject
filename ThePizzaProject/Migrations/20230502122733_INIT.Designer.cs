// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThePizzaProject.Data;

#nullable disable

namespace ThePizzaProject.Migrations
{
    [DbContext(typeof(ThePizzaProjectContext))]
    [Migration("20230502122733_INIT")]
    partial class INIT
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ThePizzaProject.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenIDIssuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenIDSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PizzaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ThePizzaProject.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientID"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ThePizzaProject.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaID"), 1L, 1);

                    b.Property<int>("AcountID")
                        .HasColumnType("int");

                    b.Property<string>("PizzaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PizzaID");

                    b.HasIndex("UserID");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("ThePizzaProject.Models.PizzaIngredient", b =>
                {
                    b.Property<int>("PizzaIngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PizzaIngredientID"), 1L, 1);

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<int>("PizzaID")
                        .HasColumnType("int");

                    b.HasKey("PizzaIngredientID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("PizzaID")
                        .IsUnique();

                    b.ToTable("pizzaIngredients");
                });

            modelBuilder.Entity("ThePizzaProject.Models.Pizza", b =>
                {
                    b.HasOne("ThePizzaProject.Models.Account", "User")
                        .WithMany("Pizzas")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThePizzaProject.Models.PizzaIngredient", b =>
                {
                    b.HasOne("ThePizzaProject.Models.Ingredient", "Ingredients")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThePizzaProject.Models.Pizza", "Pizza")
                        .WithOne("PizzaIngredients")
                        .HasForeignKey("ThePizzaProject.Models.PizzaIngredient", "PizzaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredients");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("ThePizzaProject.Models.Account", b =>
                {
                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("ThePizzaProject.Models.Pizza", b =>
                {
                    b.Navigation("PizzaIngredients")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
